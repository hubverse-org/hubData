% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_hub_schema.R
\name{create_hub_schema}
\alias{create_hub_schema}
\title{Create a Hub arrow schema}
\usage{
create_hub_schema(
  config_tasks,
  partitions = list(model_id = arrow::utf8()),
  output_type_id_datatype = c("from_config", "auto", "character", "double", "integer",
    "logical", "Date"),
  r_schema = FALSE
)
}
\arguments{
\item{config_tasks}{a list version of the content's of a hub's \code{tasks.json}
config file created using function \code{\link[hubUtils:read_config]{hubUtils::read_config()}}.}

\item{partitions}{a named list specifying the arrow data types of any
partitioning column.}

\item{output_type_id_datatype}{character string. One of \code{"from_config"}, \code{"auto"},
\code{"character"}, \code{"double"}, \code{"integer"}, \code{"logical"}, \code{"Date"}.
Defaults to \code{"from_config"} which uses the setting in the \code{output_type_id_datatype}
property in the \code{tasks.json} config file if available. If the property is
not set in the config, the argument falls back to \code{"auto"} which determines
the  \code{output_type_id} data type automatically from the \code{tasks.json}
config file as the simplest data type required to represent all output
type ID values across all output types in the hub.
When only point estimate output types (where \code{output_type_id}s are \code{NA},) are
being collected by a hub, the \code{output_type_id} column is assigned a \code{character}
data type when auto-determined.
Other data type values can be used to override automatic determination.
Note that attempting to coerce \code{output_type_id} to a data type that is
not valid for the data (e.g. trying to coerce\code{"character"} values to
\code{"double"}) will likely result in an error or potentially unexpected
behaviour so use with care.}

\item{r_schema}{Logical. If \code{FALSE} (default), return an \code{\link[arrow:schema]{arrow::schema()}} object.
If \code{TRUE}, return a character vector of R data types.}
}
\value{
an arrow schema object that can be used to define column datatypes when
opening model output data. If \code{r_schema = TRUE}, a character vector of R data types.
}
\description{
Create an arrow schema from a \code{tasks.json} config file. For use when
opening an arrow dataset.
}
\examples{
hub_path <- system.file("testhubs/simple", package = "hubUtils")
config_tasks <- hubUtils::read_config(hub_path, "tasks")
schema <- create_hub_schema(config_tasks)
}
