% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils-arrow-types.R
\name{as_r_schema}
\alias{as_r_schema}
\alias{arrow_schema_to_string}
\alias{is_supported_arrow_type}
\alias{validate_arrow_schema}
\title{Convert or validate an Arrow schema for compatibility with base R column types}
\usage{
as_r_schema(arrow_schema, call = rlang::caller_env())

arrow_schema_to_string(arrow_schema)

is_supported_arrow_type(arrow_schema)

validate_arrow_schema(arrow_schema, call = rlang::caller_env())
}
\arguments{
\item{arrow_schema}{An \link[arrow:Schema-class]{arrow::Schema} object, such as one returned by
\code{arrow::read_parquet(..., as_data_frame = FALSE)$schema} or \code{arrow::open_dataset(...)$schema}.}

\item{call}{The calling environment, used for error reporting in \code{validate_arrow_schema()}
and \code{as_r_schema()} (default: caller's environment).}
}
\value{
\itemize{
\item \code{as_r_schema()}: A named character vector mapping column names to base R type strings
(e.g., \code{"integer"}, \code{"double"}, \code{"logical"}).
\item \code{arrow_schema_to_string()}: A named character vector mapping column names to Arrow type strings.
\item \code{is_supported_arrow_type()}: A named logical vector indicating whether each column is supported.
\item \code{validate_arrow_schema()}: Returns the original schema (invisibly) if all column types are supported; otherwise throws an error.
}
}
\description{
These functions help convert or validate an \link[arrow:Schema-class]{arrow::Schema} object (typically from a Parquet file
or Arrow dataset) by translating Arrow types to R equivalents, extracting type strings,
or checking for compatibility.
}
\details{
\itemize{
\item \code{as_r_schema()} maps Arrow types to base \strong{R types} (e.g., \code{"int32"} â†’ \code{"integer"}).
It throws an error if unsupported column types are present.
\item \code{arrow_schema_to_string()} returns a named character vector of \strong{raw Arrow
type strings} (e.g., \code{"int64"}, \code{"date32[day]"}) for schema field.
\item \code{is_supported_arrow_type()} returns a named logical vector indicating whether
each schema field type is supported.
\item \code{validate_arrow_schema()} throws an error if any fields has an unsupported
Arrow type.
}

For a full list of supported types and their R mappings, see \code{\link[=arrow_to_r_datatypes]{arrow_to_r_datatypes()}}.
}
\examples{
# Path to a single Parquet file
file_path <- system.file(
  "testhubs/parquet/model-output/hub-baseline/2022-10-01-hub-baseline.parquet",
  package = "hubUtils"
)

# Get schema from the file
file_schema <- arrow::read_parquet(file_path, as_data_frame = FALSE)$schema

# Convert to R types
as_r_schema(file_schema)

# Get raw Arrow type strings
arrow_schema_to_string(file_schema)

# Check which columns are supported
is_supported_arrow_type(file_schema)

# Validate schema (throws error if any unsupported types are present)
validate_arrow_schema(file_schema)

# From a multi-file dataset
dataset_path <- system.file(
  "testhubs/parquet/model-output/hub-baseline",
  package = "hubUtils"
)
ds <- arrow::open_dataset(dataset_path)
as_r_schema(ds$schema)
arrow_schema_to_string(ds$schema)
is_supported_arrow_type(ds$schema)
validate_arrow_schema(ds$schema)
}
