% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/connect_target_timeseries.R
\name{connect_target_timeseries}
\alias{connect_target_timeseries}
\title{Open connection to time-series target data}
\usage{
connect_target_timeseries(
  hub_path = ".",
  date_col = NULL,
  na = c("NA", ""),
  ignore_files = NULL
)
}
\arguments{
\item{hub_path}{Either a character string path to a local Modeling Hub directory
or an object of class \verb{<SubTreeFileSystem>} created using functions \code{\link[=s3_bucket]{s3_bucket()}}
or \code{\link[=gs_bucket]{gs_bucket()}} by providing a string S3 or GCS bucket name or path to a
Modeling Hub directory stored in the cloud.
For more details consult the
\href{https://arrow.apache.org/docs/r/articles/fs.html}{Using cloud storage (S3, GCS)}
in the \code{arrow} package.
The hub must be fully configured with valid \code{admin.json} and \code{tasks.json}
files within the \code{hub-config} directory.}

\item{date_col}{Optional column name to be interpreted as date. Default is \code{NULL}.
Useful when the required date column is a partitioning column in the target data
and does not have the same name as a date typed task ID variable in the config.}

\item{na}{A character vector of strings to interpret as missing values. Only
applies to CSV files. The default is \code{c("NA", "")}. Useful when actual character
string \code{"NA"} values are used in the data. In such a case, use empty cells to
indicate missing values in your files and set \code{na = ""}.}

\item{ignore_files}{A character vector of file \strong{names} (not paths) or
file \strong{prefixes} to ignore when discovering model output files to
include in dataset connections.
Parent directory names should not be included.
Common non-data files such as \code{"README"} and \code{".DS_Store"} are ignored automatically,
but additional files can be excluded by specifying them here.}
}
\value{
An arrow dataset object of subclass <target_timeseries>.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}} Open the time-series target data file(s)
in a hub as an arrow dataset.
}
\details{
If the target data is split across multiple files in a \code{time-series} directory,
all files must share the same file format, either csv or parquet.
No other types of files are currently allowed in a \code{time-series} directory.
}
\examples{
# Clone example hub
tmp_hub_path <- withr::local_tempdir()
example_hub <- "https://github.com/hubverse-org/example-complex-forecast-hub.git"
gert::git_clone(url = example_hub, path = tmp_hub_path)
# Connect to time-series data
ts_con <- connect_target_timeseries(tmp_hub_path)
ts_con
# Collect all time-series data
ts_con |> dplyr::collect()
# Filter for a specific date before collecting
ts_con |>
  dplyr::filter(date == "2020-01-11") |>
  dplyr::collect()
# Filter for a specific location before collecting
ts_con |>
  dplyr::filter(location == "US") |>
  dplyr::collect()
# Access Target time-series data from a cloud hub
s3_hub_path <- s3_bucket("example-complex-forecast-hub")
s3_con <- connect_target_timeseries(s3_hub_path)
s3_con
s3_con |> dplyr::collect()
}
